print("Hellor World")
print("Hello")
print("Hello World")
setwd("~/Documentos/cursos/machine-learning-a-z/Part 2 - Regression/Section 6 - Polynomial Regression")
# Polynomial Regression
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualising the Linear Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression') +
xlab('Level') +
ylab('Salary')
# Visualising the Polynomial Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
linear_pred_value = predict(lin_reg, 6.5)
poly_pred_value = predict(poly_reg, 6.5)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
geom_point(aes(x = 6.5, y = linear_pred_value),
colour = 'green') +
geom_point(aes(x = 6.5, y = poly_pred_value),
colour = 'green')
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
linear_pred_value = predict(lin_reg, newdata = 6.5)
poly_pred_value = predict(poly_reg, newdata = 6.5)
linear_pred_value = predict(lin_reg, data.frame(6.5))
poly_pred_value = predict(poly_reg, data.frame(6.5))
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5))
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
geom_point(aes(x = 6.5, y = linear_pred_value),
colour = 'green') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3), Level4 = (6.5)^4)
poly = predict(lin_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3), Level4 = (6.5)^4)
poly = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3), Level4 = (6.5)^4)
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3), Level4 = (6.5)^4)
View(dataset)
View(dataset)
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3), Level4 = (6.5)^4))
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3, Level4 = (6.5)^4)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
geom_point(aes(x = 6.5, y = linear_pred_value),
colour = 'green') +
geom_point(aes(x = 6.5, y = poly_pred_value),
colour = 'green') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3, Level4 = (6.5)^4)
# Polynomial Regression
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualising the Linear Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression') +
xlab('Level') +
ylab('Salary')
# Visualising the Polynomial Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
setwd("~/Documentos/cursos/machine-learning-a-z/Part 2 - Regression/Section 6 - Polynomial Regression")
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualising the Linear Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression') +
xlab('Level') +
ylab('Salary')
# Visualising the Polynomial Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
# Predicting a new result with Polynomial Regression
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3, Level4 = (6.5)^4)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
geom_point(aes(x = 6.5, y = linear_pred_value),
colour = 'green') +
geom_point(aes(x = 6.5, y = poly_pred_value),
colour = 'green') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5))
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3, Level4 = (6.5)^4)
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5))
setwd("~/Documentos/cursos/machine-learning-a-z/Part 2 - Regression/Section 6 - Polynomial Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression') +
xlab('Level') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
linear_pred_value = predict(lin_reg, data.frame(Level = 6.5))
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5, Level2 = (6.5)^2, Level3 = (6.5)^3, Level4 = (6.5)^4)
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5,
Level2 = (6.5)^2,
Level3 = (6.5)^3,
Level4 = (6.5)^4))
poly_pred_value = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
geom_point(aes(x = 6.5, y = linear_pred_value),
colour = 'green') +
geom_point(aes(x = 6.5, y = poly_pred_value),
colour = 'green') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
# Polynomial Regression
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Linear Regression to the dataset
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Fitting Polynomial Regression to the dataset
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
# Visualising the Linear Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Linear Regression') +
xlab('Level') +
ylab('Salary')
# Visualising the Polynomial Regression results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = dataset$Level, y = predict(poly_reg, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Polynomial Regression') +
xlab('Level') +
ylab('Salary')
# Predicting a new result with Linear Regression
y_linear_pred = predict(lin_reg, data.frame(Level = 6.5))
# Predicting a new result with Polynomial Regression
y__poly_pred = predict(poly_reg, data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
setwd("~/Documentos/cursos/machine-learning-a-z/Part 2 - Regression/Section 6 - Polynomial Regression")
# Regression Template
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$DependentVariable, SplitRatio = 0.8)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting the Regression Model to the dataset
# Create your regressor here
# Predicting a new result
y__poly_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Regression Model results
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x =dataset$Level, y = predict(regressor, newdata = dataset)),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model') +
xlab('Level') +
ylab('Salary')
# Visualising the Regression Model results (for higher resolution and smoother curve)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Regression Model') +
xlab('Level') +
ylab('Salary')
